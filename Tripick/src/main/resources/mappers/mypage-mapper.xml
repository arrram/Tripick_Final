<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="myPageMapper">

	<resultMap type="member" id="memberResultSet">
		<result column="user_id" property="userId"/>
		<result column="user_pwd" property="userPwd"/>
		<result column="USER_NICKNAME" property="userNickName"/>
		<result column="user_name" property="userName"/>
		<result column="email" property="email"/>
		<result column="enroll_date" property="enrollDate"/>
		<result column="status" property="status"/>
	</resultMap>
	
	<resultMap type="qna" id="qnaResultSet">
		<result column="qna_no" property="qnaNo"/>
		<result column="qna_writer" property="qnaWriter"/>
		<result column="qna_title" property="qnaTitle"/>
		<result column="qna_content" property="qnaContent"/>
		<result column="qna_date" property="qnaDate"/>
		<result column="answer" property="answer"/>
		<result column="answer_writer" property="answerWriter"/>
		<result column="answer_date" property="answerDate"/>
	</resultMap>
	
	<resultMap type="reply" id="replyResultSet">
		<result column="REPLY_NO" property="replyNo"/>
		<result column="REPLY_WRITER" property="replyWriter"/>
		<result column="REPLY_CONTENT" property="replyContent"/>
		<result column="CREATE_DATE" property="create_date"/>
		<result column="STATUS" property="status"/>
		<result column="REPLY_LEVEL" property="replyLevel"/>
		<result column="REF_BOARD_NO" property="refBoardNo"/>
	</resultMap>
	
	<resultMap type="planner" id="plannerResultSet">
		<result column="PLANNER_NO" property="plannerNo" />
		<result column="PLANNER_WRITER" property="plannerWriter" />
		<result column="USER_NICKNAME" property="plannerWriter" />
		<result column="PLANNER_TITLE" property="plannerTitle" />
		<result column="F_DATE" property="fDate" />
		<result column="L_DATE" property="lDate" />
		<result column="W_DATE" property="wDate" />
		<result column="AREA" property="area" />
		<result column="TYPE" property="type" />
		<result column="COUNT" property="count" />
		<result column="CREATE_DATE" property="createDate" />
		<result column="ORIGIN_NAME" property="originName" />
		<result column="CHANGE_NAME" property="changeName" />
		<result column="STATUS" property="status" />
	</resultMap>
	
	<resultMap type="chatRoom" id="chatRoomResultSet">
		<result column="CHAT_ROOM_NO" property="chatRoomNo"/>
		<result column="STATUS" property="status"/>
		<result column="USER_ID" property="userId"/>
		<result column="MATE_NO" property="mateNo"/>
		<result column="CHAT_LEVEL" property="chatLevel"/>
		<result column="USER_NICKNAME" property="userNickName"/>
	</resultMap>

	<resultMap type="chatMessage" id="chatMessageResultSet">
		<result column="CM_NO" property="cmNo"/>
		<result column="MESSAGE" property="message"/>
		<result column="CREATE_DT" property="createDt"/>
		<result column="CHAT_ROOM_NO" property="chatRoomNo"/>
		<result column="USER_ID" property="userId"/>
	</resultMap>
	
	<select id="login" parameterType="string" resultMap="memberResultSet">
		select 
			USER_ID ,
			USER_NICKNAME ,
			USER_PWD ,
			USER_NAME ,
			EMAIL ,
			ENROLL_DATE ,
			STATUS status
		from member
		where user_Id = #{string}
	</select>
	
	<update id="memberInfoChange" parameterType="member">
		update 
		    member
		set 
		    user_nickname = #{userNickName},
		    user_pwd = #{userPwd},
		    user_name = #{userName},
		    email = #{email}
		where
		    user_id = #{userId}
	</update>
	
	<update id="deleteMember" parameterType="member">
		update 
		    member
		set 
		    status = 'N'
		where
		    user_id = #{userId}
	</update>
	
	<insert id="addWithdrawal" parameterType="member">
		insert into 
			withdrawal
		VALUES(
			#{userId}, 
			#{status})
	</insert>
	
	<select id="inquiryHistory" parameterType="string" resultMap="qnaResultSet">
		select
		    qna_no ,
		    qna_writer ,
		    qna_title ,
		    qna_content ,
		    qna_date ,
		    answer ,
		    answer_writer ,
		    answer_date 
		from
		    qna
		where
		    qna_writer = #{userId}
		and 
		    status = 'Y'
	</select>
	
	<select id="getInquiryCount" resultType="_int" parameterType="string">
		select  
			count(*)
		from	
			qna
		where 	
			status='Y'
		and
			qna_writer = #{userId}
	</select>
	
	<select id="getMyCommentCount" resultType="_int" parameterType="string">
		select  
			count(*)
		from	
			reply
		where 	
			status='Y'
		and
			REPLY_WRITER = #{userId}
	</select>
	
	<select id="getMyComments" parameterType="string" resultMap="replyResultSet">
		select
		    reply_no,
		    reply_level,
		    reply_content,
		    create_date,
		    ref_board_no
		from
		    reply
		where
		    status = 'Y'
		and
		    reply_writer = #{userId}
	</select>
	
	<select id="selectCourseListCount" parameterType="string" resultType="_int">
		SELECT 
			   COUNT(*)
		  FROM
		  	   PLANNER
		 WHERE
		 	   STATUS='Y' 	
	 	   AND
	 	   	   PLANNER_WRITER = #{userId}
	</select>
	
	<select id="selectMyCourseList" parameterType="string" resultMap="plannerResultSet">
		SELECT
			   PLANNER_NO, USER_NICKNAME, PLANNER_TITLE, W_DATE, AREA, TYPE, COUNT, CREATE_DATE, ORIGIN_NAME, CHANGE_NAME
		  FROM
			   PLANNER P
		  JOIN
			   MEMBER ON(PLANNER_WRITER = USER_ID)
		 WHERE
			   P.STATUS ='Y'
		   AND
		   	   PLANNER_WRITER = #{userId}
		 ORDER
			BY PLANNER_NO DESC 
	</select>
	
	<select id="selectInterestCourseListCount" parameterType="string" resultType="_int">
		SELECT 
			   count(*)
		  FROM
		  	   PLANNER p
          join
               likeplanner l on(p.planner_no = L.like_no)
		 WHERE
		 	   STATUS='Y' 	
	 	   AND
	 	   	   user_id = #{userId}
	</select>
	
	<select id="selectInterestCourseList" parameterType="string" resultMap="plannerResultSet">
		SELECT
		   P.PLANNER_NO, USER_NICKNAME, PLANNER_TITLE, W_DATE, AREA, TYPE, COUNT, CREATE_DATE, ORIGIN_NAME, CHANGE_NAME
		FROM
		   PLANNER P
		 JOIN
		   LIKEPLANNER L on(p.planner_no = L.like_no)
        JOIN
		   MEMBER M ON(P.PLANNER_WRITER = M.USER_ID)
		WHERE
		   P.STATUS ='Y'
		AND
		   L.user_id = #{userId}
		ORDER
			BY PLANNER_NO DESC 
	</select>
	
	<select id="getChatRooms" parameterType="string" resultMap="chatRoomResultSet">
		select 
			chat_room_no, user_id, m.user_nickname
		from 
			chat_room_join 
		join 
			member m using(user_id)
		where 
			user_id != #{userId}
		and 
			chat_room_no in (select 
								chat_room_no
	                         from 
	                         	chat_room cr
	                         join 
	                         	chat_room_join crj using(chat_room_no)
	                         where  
	                         	crj.user_id = #{userId}
                         	 and
                         	 	status = 'Y'
                         	 	)
	</select>
	
	<select id="getChats" parameterType="string" resultMap="chatMessageResultSet">
		select 
			message, create_dt, user_id
		from 
			chat_message
		where 
			chat_room_no = #{chatRoomNo}
	</select>
	
	<insert id="insertMsg">
		insert into 
			chat_message
		values(
				seq_cm_no.nextval, 
				#{message}, 
				SYSDATE, 
				#{chatRoomNo}, 
				#{userId},
				null,null)
	</insert>
	
	<insert id="addChatRoom">
		insert into 
			chat_room
		values
			(SEQ_CR_NO.nextval, #{myUserId}, 'Y', #{myUserId}, null,1)
	</insert>
	
	<insert id="addChatRoomJoin">
		insert into 
			chat_room_join
		values
			(SEQ_CR_NO.CURRVAL, #{userId})
	</insert>
	
	
	
	
	
	
	
	
	
	
</mapper>
